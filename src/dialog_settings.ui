<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>DialogSettings</class>
 <widget class="QDialog" name="DialogSettings">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>566</width>
    <height>362</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Application settings</string>
  </property>
  <layout class="QVBoxLayout" name="verticalLayout_7">
   <item>
    <widget class="QTabWidget" name="tabWidget">
     <property name="currentIndex">
      <number>0</number>
     </property>
     <widget class="QWidget" name="tab">
      <attribute name="title">
       <string>Text editor</string>
      </attribute>
      <layout class="QVBoxLayout" name="verticalLayout_3">
       <item>
        <widget class="QGroupBox" name="groupBox">
         <property name="title">
          <string>General</string>
         </property>
         <layout class="QVBoxLayout" name="verticalLayout">
          <item>
           <layout class="QHBoxLayout" name="horizontalLayout">
            <item>
             <widget class="QLabel" name="label">
              <property name="text">
               <string>Editor font style:</string>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QFontComboBox" name="fontEditor">
              <property name="whatsThis">
               <string>Font style for the main editor window where the text is being edited.</string>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QLabel" name="label_2">
              <property name="text">
               <string>size:</string>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QSpinBox" name="fontEditorSize">
              <property name="whatsThis">
               <string>Font size for main editor window</string>
              </property>
              <property name="minimum">
               <number>6</number>
              </property>
              <property name="maximum">
               <number>120</number>
              </property>
              <property name="singleStep">
               <number>2</number>
              </property>
             </widget>
            </item>
            <item>
             <spacer name="horizontalSpacer">
              <property name="orientation">
               <enum>Qt::Horizontal</enum>
              </property>
              <property name="sizeHint" stdset="0">
               <size>
                <width>79</width>
                <height>20</height>
               </size>
              </property>
             </spacer>
            </item>
           </layout>
          </item>
          <item>
           <layout class="QHBoxLayout" name="horizontalLayout_2">
            <item>
             <widget class="QCheckBox" name="cbEditorSupportBlocks">
              <property name="whatsThis">
               <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Liberation Sans'; font-size:12pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;LRC format only.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;No karaoke player can show the whole lyrics on screen at the same time. Most players can only show 4-8 lines of text on screen. If the lyrics are continuous, the player decides itself where to split the text - usually applying simple logics, which may not necessary provide good results. However if the player supports blocks (XBMC does), you can add an empty line between verses, and the player will use those markers to separate verses when showing text on screen.&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;If enabled, the validator will allows block separators (single empty lines), and will check that the block size does not exceed a specific number of lines.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
              </property>
              <property name="text">
               <string>Support blocks; each block can have up to</string>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QSpinBox" name="leEditorBlockLines">
              <property name="enabled">
               <bool>false</bool>
              </property>
              <property name="whatsThis">
               <string>If blocks are enabled, this parameter specifies the maximum number of lines allowed in block. Most players cannot show more than 8 lines, so before using a larger parameter, please make sure your player supports it.</string>
              </property>
              <property name="suffix">
               <string> lines</string>
              </property>
              <property name="minimum">
               <number>1</number>
              </property>
              <property name="value">
               <number>1</number>
              </property>
             </widget>
            </item>
            <item>
             <spacer name="horizontalSpacer_2">
              <property name="orientation">
               <enum>Qt::Horizontal</enum>
              </property>
              <property name="sizeHint" stdset="0">
               <size>
                <width>79</width>
                <height>20</height>
               </size>
              </property>
             </spacer>
            </item>
           </layout>
          </item>
          <item>
           <layout class="QHBoxLayout" name="horizontalLayout_10">
            <item>
             <widget class="QCheckBox" name="boxEditorRealtimeTesting">
              <property name="toolTip">
               <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;By default when you test the lyrics using &amp;quot;Test Lyrics&amp;quot; button, any change you made in the editor is ignored until you press the &amp;quot;Test Lyrics&amp;quot; button again. &lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;However if this option is checked, any change in the Editor, which happens while the Test Lyrics Window is shown and the song is playing, will automatically update and refresh the window. The player will also seek the specified number of seconds backward from the changed timing mark (unless set to 0 seconds), effectively letting you to see right away the result of your editing.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
              </property>
              <property name="text">
               <string>Enable realtime test window update; seek</string>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QSpinBox" name="leEditorSecondsBackward">
              <property name="enabled">
               <bool>false</bool>
              </property>
              <property name="whatsThis">
               <string>If blocks are enabled, this parameter specifies the maximum number of lines allowed in block. Most players cannot show more than 8 lines, so before using a larger parameter, please make sure your player supports it.</string>
              </property>
              <property name="suffix">
               <string> sec</string>
              </property>
              <property name="minimum">
               <number>0</number>
              </property>
              <property name="maximum">
               <number>20</number>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QLabel" name="label_3">
              <property name="text">
               <string>backward</string>
              </property>
             </widget>
            </item>
            <item>
             <spacer name="horizontalSpacer_5">
              <property name="orientation">
               <enum>Qt::Horizontal</enum>
              </property>
              <property name="sizeHint" stdset="0">
               <size>
                <width>40</width>
                <height>20</height>
               </size>
              </property>
             </spacer>
            </item>
           </layout>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <widget class="QGroupBox" name="groupBox_2">
         <property name="title">
          <string>Automatic stop during tagging </string>
         </property>
         <layout class="QVBoxLayout" name="verticalLayout_2">
          <item>
           <widget class="QCheckBox" name="cbEditorStopAtEnd">
            <property name="whatsThis">
             <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Liberation Sans'; font-size:12pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;LRC version 2 or UltraStar only. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;When tagging the song (using Insert Tag, which inserts current time tag at the cursor position), the cursor moves forward, typically to the beginning of next line. If this checkbox is set, the cursor will move to the end of current line, allowing you to put a time tag there (and after that it will move to the beginning of next line). This is important, because having a time tag at the end of line allows the player to calculate how much time the current line takes, and therefore provides more accurate character highlighting.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="text">
             <string>Stop at the end of line (to put a time tag there)</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QCheckBox" name="cbEditorDoubleTags">
            <property name="whatsThis">
             <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Liberation Sans'; font-size:12pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;LRC2 and UltraStar formats&lt;/span&gt;.&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Normally when inserting time tags, a placeholder is replaced by a single timing mark, and cursor moves forward. If this checkbox is set, the cursor will move one character ahead, skipping the new time mark, and will allow you to put two time tags in the place of placeholder. This is useful when there is a hearable pause between words on the line, and you want to put two timing tags, when the first would represent &quot;first word end&quot; and the second would represent &quot;second word start&quot;. For example, in Hotel California refrain:&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-style:italic;&quot;&gt;Welcome to the Hotel California&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;A word &quot;Welcome&quot; is being sung approximately the same time as the words &quot;to the Hotel&quot;. If you only put two time tags at the line beginning and ending, the player will assume all the words have equal length, and will speed up &quot;welcome&quot; and slow down &quot;to the hotel&quot;. Instead you would put a placeholder between &quot;welcome&quot; and &quot;to the hotel&quot;, press &quot;Insert Tag&quot; at the end of &quot;welcome&quot;, and press it again at start &quot;to the hotel&quot;, therefore providing better timings to the player.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
            </property>
            <property name="text">
             <string>Replace time placeholder by two time tags instead of one</string>
            </property>
           </widget>
          </item>
          <item>
           <layout class="QHBoxLayout" name="horizontalLayout_3">
            <item>
             <widget class="QCheckBox" name="cbEditorStopAtWords">
              <property name="whatsThis">
               <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Liberation Sans'; font-size:12pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;LRC version 2 or UltraStar only. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;When tagging the song (using Insert Tag, which inserts current time tag at the cursor position), the cursor moves forward, typically to the beginning of next line or next placeholder. If this checkbox is set, the cursor will move to the beginning of next word. To skip prepositions and articles, it also skips the words which have less than specified number of characters.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
              </property>
              <property name="text">
               <string>Stop at the beginning of next word; a word must be longer than</string>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QSpinBox" name="leEditorWordCount">
              <property name="enabled">
               <bool>false</bool>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QLabel" name="label_4">
              <property name="text">
               <string>chars</string>
              </property>
             </widget>
            </item>
           </layout>
          </item>
          <item>
           <spacer name="verticalSpacer_4">
            <property name="orientation">
             <enum>Qt::Vertical</enum>
            </property>
            <property name="sizeHint" stdset="0">
             <size>
              <width>20</width>
              <height>40</height>
             </size>
            </property>
           </spacer>
          </item>
         </layout>
        </widget>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="tab_2">
      <attribute name="title">
       <string>Timing marks</string>
      </attribute>
      <layout class="QVBoxLayout" name="verticalLayout_4">
       <item>
        <widget class="QGroupBox" name="groupBox_3">
         <property name="title">
          <string>Font</string>
         </property>
         <layout class="QHBoxLayout" name="horizontalLayout_4">
          <item>
           <widget class="QLabel" name="label_5">
            <property name="text">
             <string>Time mark font style:</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QFontComboBox" name="fontTimeMark">
            <property name="whatsThis">
             <string>Font style for time placeholder. Since the font is usually smaller than editor font, do not chose serif fonts here.</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QLabel" name="label_6">
            <property name="text">
             <string>size:</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QSpinBox" name="fontTimeMarkSize">
            <property name="whatsThis">
             <string>Placeholder font size. Should be at least 2px smaller than editor text font size.</string>
            </property>
            <property name="minimum">
             <number>4</number>
            </property>
            <property name="maximum">
             <number>120</number>
            </property>
           </widget>
          </item>
          <item>
           <spacer name="horizontalSpacer_3">
            <property name="orientation">
             <enum>Qt::Horizontal</enum>
            </property>
            <property name="sizeHint" stdset="0">
             <size>
              <width>79</width>
              <height>20</height>
             </size>
            </property>
           </spacer>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout_5">
         <item>
          <widget class="QGroupBox" name="groupBox_4">
           <property name="title">
            <string>Placeholder colors</string>
           </property>
           <layout class="QGridLayout" name="gridLayout">
            <item row="0" column="0">
             <widget class="QLabel" name="label_7">
              <property name="text">
               <string>Background:</string>
              </property>
             </widget>
            </item>
            <item row="0" column="1">
             <widget class="ColorButton" name="btnTimingColorPhBg">
              <property name="whatsThis">
               <string>Placeholder background color.</string>
              </property>
              <property name="text">
               <string>PushButton</string>
              </property>
             </widget>
            </item>
            <item row="1" column="0">
             <widget class="QLabel" name="label_17">
              <property name="text">
               <string>Text:</string>
              </property>
             </widget>
            </item>
            <item row="1" column="1">
             <widget class="ColorButton" name="btnTimingColorPhText">
              <property name="whatsThis">
               <string>Placeholder text color.</string>
              </property>
              <property name="text">
               <string>PushButton</string>
              </property>
             </widget>
            </item>
           </layout>
          </widget>
         </item>
         <item>
          <widget class="QGroupBox" name="groupBox_8">
           <property name="title">
            <string>Timing mark colors</string>
           </property>
           <layout class="QGridLayout" name="gridLayout_2">
            <item row="0" column="0">
             <widget class="QLabel" name="label_8">
              <property name="text">
               <string>Background:</string>
              </property>
             </widget>
            </item>
            <item row="0" column="1">
             <widget class="ColorButton" name="btnTimingColorTiBg">
              <property name="whatsThis">
               <string>Timing mark background color.</string>
              </property>
              <property name="text">
               <string>PushButton</string>
              </property>
             </widget>
            </item>
            <item row="1" column="0">
             <widget class="QLabel" name="label_9">
              <property name="text">
               <string>Text:</string>
              </property>
             </widget>
            </item>
            <item row="1" column="1">
             <widget class="ColorButton" name="btnTimingColorTiText">
              <property name="whatsThis">
               <string>Timing mark foreground color.</string>
              </property>
              <property name="text">
               <string>PushButton</string>
              </property>
             </widget>
            </item>
           </layout>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <widget class="QGroupBox" name="groupBox_9">
         <property name="title">
          <string>Ultrastar-specific</string>
         </property>
         <layout class="QHBoxLayout" name="horizontalLayout_9">
          <item>
           <widget class="QLabel" name="label_18">
            <property name="whatsThis">
             <string>Background color for a timing mark which contains both time and pitch. Making it different from timing mark background color above would make it easier to detect timing marks which do not have pitch seet yet.</string>
            </property>
            <property name="text">
             <string>Background color:</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="ColorButton" name="btnTimingColorTiPitch">
            <property name="sizePolicy">
             <sizepolicy hsizetype="Minimum" vsizetype="Fixed">
              <horstretch>1</horstretch>
              <verstretch>0</verstretch>
             </sizepolicy>
            </property>
            <property name="whatsThis">
             <string>Background color for a timing mark which contains both time and pitch. Making it different from timing mark background color above would make it easier to detect timing marks which do not have pitch seet yet.</string>
            </property>
            <property name="text">
             <string>PushButton</string>
            </property>
           </widget>
          </item>
          <item>
           <spacer name="horizontalSpacer_4">
            <property name="orientation">
             <enum>Qt::Horizontal</enum>
            </property>
            <property name="sizeHint" stdset="0">
             <size>
              <width>26</width>
              <height>20</height>
             </size>
            </property>
           </spacer>
          </item>
          <item>
           <widget class="QCheckBox" name="cbShowPitchTimingMark">
            <property name="whatsThis">
             <string>If checked, the timing mark will also show the pitch. It takes more screen space, but also provides more information. The pitch will only be shown for lyric formats which suport it (only UltraStar so far).</string>
            </property>
            <property name="text">
             <string>Show pitch in timing mark if available</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <spacer name="verticalSpacer">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>90</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="tab_3">
      <attribute name="title">
       <string>Preview window</string>
      </attribute>
      <layout class="QVBoxLayout" name="verticalLayout_5">
       <item>
        <widget class="QGroupBox" name="groupBox_5">
         <property name="title">
          <string>Font</string>
         </property>
         <layout class="QHBoxLayout" name="horizontalLayout_6">
          <item>
           <widget class="QLabel" name="label_10">
            <property name="text">
             <string>Time mark font style:</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QFontComboBox" name="fontPreview">
            <property name="whatsThis">
             <string>Font family for preview window</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QLabel" name="label_11">
            <property name="text">
             <string>size:</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QSpinBox" name="fontPreviewSize">
            <property name="whatsThis">
             <string>Font size for preview window. Larger values are suggested (24 and up)</string>
            </property>
            <property name="minimum">
             <number>4</number>
            </property>
            <property name="maximum">
             <number>120</number>
            </property>
            <property name="singleStep">
             <number>2</number>
            </property>
           </widget>
          </item>
          <item>
           <spacer name="horizontalSpacer_6">
            <property name="orientation">
             <enum>Qt::Horizontal</enum>
            </property>
            <property name="sizeHint" stdset="0">
             <size>
              <width>79</width>
              <height>20</height>
             </size>
            </property>
           </spacer>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <widget class="QGroupBox" name="groupBox_6">
         <property name="title">
          <string>Colors</string>
         </property>
         <layout class="QHBoxLayout" name="horizontalLayout_7">
          <item>
           <widget class="QLabel" name="label_12">
            <property name="text">
             <string>Backround</string>
            </property>
            <property name="alignment">
             <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
            </property>
           </widget>
          </item>
          <item>
           <widget class="ColorButton" name="btnPreviewColorBg">
            <property name="whatsThis">
             <string>Preview window background color.</string>
            </property>
            <property name="text">
             <string>PushButton</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QLabel" name="label_13">
            <property name="text">
             <string>Inactive</string>
            </property>
            <property name="alignment">
             <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
            </property>
           </widget>
          </item>
          <item>
           <widget class="ColorButton" name="btnPreviewColorInactive">
            <property name="whatsThis">
             <string>Preview window text color for the text which is not being sung yet..</string>
            </property>
            <property name="text">
             <string>PushButton</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QLabel" name="label_14">
            <property name="text">
             <string>Active</string>
            </property>
            <property name="alignment">
             <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
            </property>
           </widget>
          </item>
          <item>
           <widget class="ColorButton" name="btnPreviewColorActive">
            <property name="whatsThis">
             <string>Preview window text color for the text which has been sung.</string>
            </property>
            <property name="text">
             <string>PushButton</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <spacer name="verticalSpacer_2">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>90</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="tab_4">
      <attribute name="title">
       <string>Advanced</string>
      </attribute>
      <layout class="QVBoxLayout" name="verticalLayout_6">
       <item>
        <widget class="QGroupBox" name="groupBox_7">
         <property name="title">
          <string>Phonon</string>
         </property>
         <layout class="QHBoxLayout" name="horizontalLayout_8">
          <item>
           <widget class="QLabel" name="label_15">
            <property name="text">
             <string>Audio delay introduced by Phonon:</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QLineEdit" name="leTickDelay">
            <property name="whatsThis">
             <string>There is a delay between the Phonon (internal player) architecture plays the song, and before the tick() signal (which is used to synchronize lyrics) is played. This delay does not affect preview, since the delay is the same. However actual lyrics when tested with a karaoke player, might appear &quot;shifted&quot; (usually a little behind). This value(in milliseconds) represents the delay. It will be added to the exported lyrics automatically, and therefore the time might not match for UltraStar format. For LRC formats it is added via &quot;offset&quot; field.</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QLabel" name="label_16">
            <property name="text">
             <string>ms</string>
            </property>
           </widget>
          </item>
          <item>
           <spacer name="horizontalSpacer_9">
            <property name="orientation">
             <enum>Qt::Horizontal</enum>
            </property>
            <property name="sizeHint" stdset="0">
             <size>
              <width>40</width>
              <height>20</height>
             </size>
            </property>
           </spacer>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <widget class="QGroupBox" name="groupBox_10">
         <property name="title">
          <string>Check for updates</string>
         </property>
         <layout class="QVBoxLayout" name="verticalLayout_8">
          <item>
           <widget class="QCheckBox" name="cbCheckForUpdates">
            <property name="whatsThis">
             <string>If this option is enabled, the application will check for updates (when new version of application is released). If a new version is available, the program will show a messagebox dialog informing you about new version. This check will only performed once in 24 hours. No user information is requested or transmitted from your computer during this check.</string>
            </property>
            <property name="text">
             <string>Check once a day, and warn me when a new version is available</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QLabel" name="lblLastUpdate">
            <property name="text">
             <string>Last checked: Never</string>
            </property>
            <property name="alignment">
             <set>Qt::AlignCenter</set>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item>
        <spacer name="verticalSpacer_3">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>287</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
    </widget>
   </item>
   <item>
    <widget class="QDialogButtonBox" name="buttonBox">
     <property name="orientation">
      <enum>Qt::Horizontal</enum>
     </property>
     <property name="standardButtons">
      <set>QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>
     </property>
    </widget>
   </item>
  </layout>
 </widget>
 <customwidgets>
  <customwidget>
   <class>ColorButton</class>
   <extends>QPushButton</extends>
   <header>colorbutton.h</header>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections>
  <connection>
   <sender>buttonBox</sender>
   <signal>accepted()</signal>
   <receiver>DialogSettings</receiver>
   <slot>accept()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>261</x>
     <y>352</y>
    </hint>
    <hint type="destinationlabel">
     <x>157</x>
     <y>274</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>buttonBox</sender>
   <signal>rejected()</signal>
   <receiver>DialogSettings</receiver>
   <slot>reject()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>329</x>
     <y>352</y>
    </hint>
    <hint type="destinationlabel">
     <x>286</x>
     <y>274</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>cbEditorStopAtWords</sender>
   <signal>toggled(bool)</signal>
   <receiver>leEditorWordCount</receiver>
   <slot>setEnabled(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>86</x>
     <y>289</y>
    </hint>
    <hint type="destinationlabel">
     <x>476</x>
     <y>291</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>cbEditorSupportBlocks</sender>
   <signal>toggled(bool)</signal>
   <receiver>leEditorBlockLines</receiver>
   <slot>setEnabled(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>114</x>
     <y>118</y>
    </hint>
    <hint type="destinationlabel">
     <x>386</x>
     <y>131</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>boxEditorRealtimeTesting</sender>
   <signal>toggled(bool)</signal>
   <receiver>leEditorSecondsBackward</receiver>
   <slot>setEnabled(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>137</x>
     <y>156</y>
    </hint>
    <hint type="destinationlabel">
     <x>339</x>
     <y>150</y>
    </hint>
   </hints>
  </connection>
 </connections>
</ui>
